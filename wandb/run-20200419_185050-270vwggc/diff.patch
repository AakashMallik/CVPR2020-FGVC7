diff --git a/.vscode/settings.json b/.vscode/settings.json
index a2a69c0..34b0917 100644
--- a/.vscode/settings.json
+++ b/.vscode/settings.json
@@ -5,12 +5,14 @@
     "cSpell.words": [
         "get",
         "header",
+        "init",
         "kaggle",
         "optimier",
         "optimiser",
         "optimisers",
         "output",
         "tqdm",
-        "trange"
+        "trange",
+        "wandb"
     ]
 }
\ No newline at end of file
diff --git a/README.md b/README.md
index b3bcd4e..416433d 100644
--- a/README.md
+++ b/README.md
@@ -186,7 +186,7 @@ experiment_list:
 
 ## Lib dependency
 ```bash
-pip install --user torch torchvision catalyst albumentations pandas scikit-image tqdm scikit-learn pyyaml blessed pyzmq pretrainedmodels tensorboard
+pip install --user torch wandb torchvision catalyst albumentations pandas scikit-image tqdm scikit-learn pyyaml blessed pyzmq pretrainedmodels tensorboard
 ```
 
 ## Utility commands
diff --git a/main.py b/main.py
index e33dfd6..be25f42 100644
--- a/main.py
+++ b/main.py
@@ -1,3 +1,4 @@
+import os
 import argparse
 from train import train
 from eval import eval
@@ -6,6 +7,9 @@ from utils.config_parser import get_config_data
 from utils.check_gpu import get_training_device
 from utils.seed_backend import seed_all
 
+# set environment keys
+os.environ['WANDB_SILENT'] = 'true'
+
 # Parse arguments
 parser = argparse.ArgumentParser()
 parser.add_argument("experiment_file",
diff --git a/run.sh b/run.sh
index 921b986..7557bbb 100755
--- a/run.sh
+++ b/run.sh
@@ -54,4 +54,6 @@
 
 # python ./main.py "test_b4.yml"
 
-python ./main.py -a 'aug_search.yml'
\ No newline at end of file
+# python ./main.py -a 'aug_search.yml'
+
+python ./main.py -p 'b4_14.yml'
\ No newline at end of file
diff --git a/train.py b/train.py
index a3f178f..195b421 100644
--- a/train.py
+++ b/train.py
@@ -12,8 +12,6 @@ from utils.experiment_utils import ExperimentHelper
 from utils.custom_bar import CustomBar
 from utils.seed_backend import seed_all
 
-import numpy
-
 # stop tensorboard warnings
 environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
 
@@ -36,7 +34,9 @@ def train(config, device, policy=None):
         config['experiment_name'],
         config['validation_frequency'],
         tb_writer=writer,
-        overwrite=True
+        overwrite=True,
+        publish=config['publish'],
+        config=config
     )
 
     optimiser_factory = OptimiserFactory()
@@ -194,8 +194,8 @@ def train(config, device, policy=None):
                         model.state_dict()
                     )
 
-    # publish on telegram
-    config['publish'] and experiment_helper.publish()
+    # publish final
+    config['publish'] and experiment_helper.publish_final(config)
 
     return (experiment_helper.best_val_loss, experiment_helper.best_val_roc)
 
diff --git a/utils/__pycache__/experiment_utils.cpython-37.pyc b/utils/__pycache__/experiment_utils.cpython-37.pyc
index 7c27bc4..97c347f 100644
Binary files a/utils/__pycache__/experiment_utils.cpython-37.pyc and b/utils/__pycache__/experiment_utils.cpython-37.pyc differ
diff --git a/utils/experiment_utils.py b/utils/experiment_utils.py
index e42c4d8..5bdebdf 100644
--- a/utils/experiment_utils.py
+++ b/utils/experiment_utils.py
@@ -6,7 +6,8 @@ import math
 from utils.regression_utils import covert_to_classification
 from utils.kaggle_metric import (roc_auc_score_generator)
 from utils.print_util import cprint
-from utils.telegram_update import publish
+from utils.telegram_update import publish_msg
+from utils.wandb_update import (wandb_init, publish_intermediate)
 
 
 def accuracy_generator(output_list, target_list):
@@ -16,7 +17,7 @@ def accuracy_generator(output_list, target_list):
 
 
 class ExperimentHelper:
-    def __init__(self, experiment_name, freq=None, tb_writer=None, overwrite=False,):
+    def __init__(self, experiment_name, freq=None, tb_writer=None, overwrite=False, publish=False, config=None):
         if path.exists(path.join('results', experiment_name)) == False:
             makedirs(path.join('results', experiment_name))
         else:
@@ -30,6 +31,9 @@ class ExperimentHelper:
                        "> output exists - Manual deletion needed ]", type="warn")
                 exit()
 
+        self.publish = publish
+        self.publish and wandb_init(config)
+
         self.experiment_name = experiment_name
         self.best_val_loss = float('inf')
         self.best_val_roc = 0
@@ -43,6 +47,15 @@ class ExperimentHelper:
             "train_roc": None,
             "epoch": None
         }
+        self.intermediate_result = {
+            "val_loss": self.best_val_loss,
+            "val_acc": None,
+            "train_loss": None,
+            "train_acc": None,
+            "val_roc": None,
+            "train_roc": None,
+            "epoch": None
+        }
         self.tb_writer = tb_writer
         self.freq = freq
         self.progress_loss = False
@@ -131,8 +144,8 @@ class ExperimentHelper:
                 self.result["val_acc"] = val_acc
                 self.result["train_loss"] = train_loss
                 self.result["train_acc"] = train_acc
-                self.result["val_roc"] = val_roc
-                self.result["train_roc"] = train_roc
+                self.result["val_kaggle_metric"] = val_roc
+                self.result["train_kaggle_metric"] = train_roc
                 self.result["epoch"] = epoch
             else:
                 self.progress_loss = False
@@ -144,7 +157,24 @@ class ExperimentHelper:
             else:
                 self.progress_roc = False
 
+            # publish intermediate
+            self.publish and self.publish_intermediate({
+                "val_loss": val_loss,
+                "val_acc": val_acc,
+                "train_loss": train_loss,
+                "train_acc": train_acc,
+                "val_kaggle_metric": val_roc,
+                "train_kaggle_metric": train_roc,
+                "epoch": epoch
+            })
+
             return (val_loss, train_loss, val_acc, train_acc, val_roc, train_roc)
 
-    def publish(self):
-        publish(self.result)
+    def publish_final(self, config):
+        # telegram
+        # publish_msg(self.result)
+        pass
+
+    def publish_intermediate(self, results):
+        # wandb
+        publish_intermediate(results)
diff --git a/utils/telegram_update.py b/utils/telegram_update.py
index 6d00287..a0ad2b6 100644
--- a/utils/telegram_update.py
+++ b/utils/telegram_update.py
@@ -5,7 +5,7 @@ import socket
 from utils.print_util import cprint
 
 
-def publish(results):
+def publish_msg(results):
     ctx = zmq.Context()
     sock = ctx.socket(zmq.PUSH)
     sock.connect("tcp://192.168.100.21:1234")
