diff --git a/README.md b/README.md
index 416433d..1cc3c8b 100644
--- a/README.md
+++ b/README.md
@@ -68,12 +68,21 @@ The backbones we are looking forward to explore are:
     - [x] Stratified k fold
 - [x] Models
     - [x] Efficientnet B7
+    - [x] Efficientnet B4
+    - [x] Resnet 34
+    - [x] Densenet 161
 - [x] Loss
     - [x] Cross Entropy Loss
     - [x] Focal loss
-    - [x] Mean ROC AUC loss ( Kaggle )
+    - [x] ArcFace loss
+    - [ ] Mean ROC AUC loss ( Kaggle )
 - [x] Optimizer
     - [x] RMS prop with Efficient net params
+    - [X] Adam
+    - [x] AdamW
+- [X] Scheduler
+    - [X] CosineAnelingLR
+    - [X] StepLR
 
 ---
 
@@ -134,10 +143,12 @@ train_dataset:
   name:
   fold: ( optional )
   resize_dims:
+  transform: (optional, uses default if not specified)
 val_dataset: 
   name:
   fold: ( optional )
   resize_dims:
+  transform: (optional, uses default if not specified)
 model: 
   name:
   pred_type: regression/classification/mixed
@@ -184,6 +195,26 @@ experiment_list:
       weight_type: ( optional key to pick the type of weight - best_val_loss/best_val_roc )
 ```
 
+## How to use
+#### 1. Using it for train/test
+simply modify the run.sh with the required commands:  
+```
+python main.py "train_dummy_1.yml"
+python main.py "test_dummy.yml"
+```  
+  
+#### 2. Using it for augmentation search
+Add ```-a``` flag with the training config that you are going to use for scoring:
+```
+python main.py -a 'train_dummy_1.yml'
+```  
+  
+#### 3. Publish mode while training
+Add ```-p``` flag with the training config to publish results to W&B and Telegram:
+```
+python main.py -p 'train_dummy_1.yml'
+```
+
 ## Lib dependency
 ```bash
 pip install --user torch wandb torchvision catalyst albumentations pandas scikit-image tqdm scikit-learn pyyaml blessed pyzmq pretrainedmodels tensorboard
diff --git a/auto_aug.py b/auto_aug.py
index 22e93f9..16ab52e 100644
--- a/auto_aug.py
+++ b/auto_aug.py
@@ -6,7 +6,7 @@ from utils.print_util import cprint
 TOP_POLICY_CNT = 5
 SUB_POLICY_CNT = 5
 OPERATIONS_PER_SUB = 2
-AUG_SEARCH_LOOP = 25
+AUG_SEARCH_LOOP = 10
 
 
 def search(config, device):
diff --git a/config/aug_search.yml b/config/aug_search.yml
index 0f085b8..87a35e8 100644
--- a/config/aug_search.yml
+++ b/config/aug_search.yml
@@ -1,7 +1,7 @@
 mode: train
-seed: 128
+seed: 1024
 validation_frequency: 2
-epochs: 50
+epochs: 30
 batch_size: 42
 num_classes: 4
 train_dataset: 
diff --git a/models/__pycache__/utils.cpython-37.pyc b/models/__pycache__/utils.cpython-37.pyc
index 43faa6e..30c7f9c 100644
Binary files a/models/__pycache__/utils.cpython-37.pyc and b/models/__pycache__/utils.cpython-37.pyc differ
diff --git a/models/model_factory.py b/models/model_factory.py
index ad5d5c9..00cabbb 100644
--- a/models/model_factory.py
+++ b/models/model_factory.py
@@ -52,6 +52,23 @@ class ModelFactory():
             if hyper_params is not None:
                 model._bn_mom = hyper_params['batch_norm_momentum']
 
+        if model_name == 'efficientnet-b5':
+            print("[ Model : Efficientnet B5 ]")
+            model = EfficientNet.from_pretrained(
+                model_name='efficientnet-b5', advprop=True)
+            if tuning_type == 'feature-extraction':
+                for param in model.parameters():
+                    param.requires_grad = False
+            num_ftrs = model._fc.in_features
+            model._fc = nn.Sequential(
+                # nn.Linear(num_ftrs, num_classes),
+                # nn.Sigmoid(),
+                nn.Linear(num_ftrs, adjusted_num_classes)
+            )
+
+            if hyper_params is not None:
+                model._bn_mom = hyper_params['batch_norm_momentum']
+
         if model_name == 'densenet-161':
             print("[ Model : Densenet 161 ]")
             model = models.densenet161(pretrained=True)
@@ -65,7 +82,8 @@ class ModelFactory():
 
         if model_name == 'resnet34':
             print("[ Model : Resnet 34 ]")
-            model = pretrainedmodels.__dict__['resnet34'](pretrained='imagenet')
+            model = pretrainedmodels.__dict__[
+                'resnet34'](pretrained='imagenet')
 
             model.avgpool = nn.AdaptiveAvgPool2d(1)
             in_features = model.last_linear.in_features
diff --git a/models/utils.py b/models/utils.py
index 36a3ddf..04dd42d 100644
--- a/models/utils.py
+++ b/models/utils.py
@@ -299,6 +299,11 @@ def load_pretrained_weights(model, model_name, load_fc=True, advprop=False):
     state_dict = None
     if model_name == 'efficientnet-b7':
         state_dict = torch.load("pretrained_weights/efficientnet_b7.pth")
+    elif model_name == 'efficientnet-b5':
+        if advprop:
+            state_dict = torch.load("pretrained_weights/adv_efficientnet_b5.pth")
+        else:
+            state_dict = torch.load("pretrained_weights/efficientnet_b5.pth")
     elif model_name == 'efficientnet-b4':
         state_dict = torch.load("pretrained_weights/efficientnet_b4.pth")
     
diff --git a/results/aug_search/result.csv b/results/aug_search/result.csv
index 2317681..9a7f496 100644
--- a/results/aug_search/result.csv
+++ b/results/aug_search/result.csv
@@ -1,4 +1,16 @@
 epoch,Loss ( Val ),Loss ( Train ),Accuracy ( Val ),Accuracy ( Train ),ROC ( Val ),ROC ( Train )
-2,1.6211179494857788,1.8591499328613281,0.9038461538461539,0.905971173644475,0.9509281733295332,0.9483325316340373
-4,0.8657646775245667,0.6017876863479614,0.9230769230769231,0.9354838709677419,0.9643916602626983,0.9759704735469825
-6,0.7989475131034851,0.0974106416106224,0.9340659340659341,0.9862731640356898,0.9758866290938213,0.9977654793822051
+2,1.0602893829345703,1.1402419805526733,0.8901098901098901,0.8963623884694578,0.9551573768943449,0.9423270545307165
+4,0.6358274817466736,0.8941201567649841,0.9175824175824175,0.9094028826355525,0.9691610950040851,0.9565556027042788
+6,0.8108760118484497,0.27144473791122437,0.9258241758241759,0.9629375428963624,0.9606709599001597,0.985409711986143
+8,0.5432196259498596,0.11091796308755875,0.9423076923076923,0.9883321894303363,0.9833663867194409,0.9920513427397999
+10,0.5149634480476379,0.14084945619106293,0.9395604395604396,0.9814687714481812,0.9869865297988697,0.9949511035776579
+12,0.6875612735748291,0.060774631798267365,0.9313186813186813,0.9910775566231984,0.9629402141294698,0.9988415745441779
+14,0.6184841990470886,0.028518013656139374,0.9285714285714286,0.9965682910089224,0.9843916337969185,0.9992689978299547
+16,0.5395377278327942,0.05748826637864113,0.9560439560439561,0.9910775566231984,0.9760714161032317,0.9977838421300796
+18,0.5176814198493958,0.08873316645622253,0.9532967032967034,0.9945092656142759,0.9899959474462807,0.9970842240645954
+20,0.571002721786499,0.02085525542497635,0.9423076923076923,0.9965682910089224,0.987334289863818,0.9997316195210233
+22,0.6789243221282959,0.0907512679696083,0.9313186813186813,0.9897048730267674,0.9745412418265198,0.998451308349019
+24,0.933686375617981,0.6054893732070923,0.9313186813186813,0.939601921757035,0.9704163908603579,0.977357709548372
+26,0.6034796833992004,0.12841787934303284,0.9203296703296703,0.9835277968428278,0.9882874810672179,0.9933443081874006
+28,0.4766247868537903,0.05370941385626793,0.9478021978021978,0.9924502402196294,0.9891121565707328,0.9993458881975075
+30,0.3802364766597748,0.03150038793683052,0.945054945054945,0.9958819492107069,0.9918194633125017,0.9997683528715725
diff --git a/run.sh b/run.sh
index a270ff0..8ab3c93 100755
--- a/run.sh
+++ b/run.sh
@@ -1,5 +1,5 @@
 # Dummy
-python ./main.py -a "train_dummy_1.yml"
+# python ./main.py -a "train_dummy_1.yml"
 # python ./main.py "train_dummy_2.yml"
 
 # python ./main.py "test_dummy.yml"
@@ -78,4 +78,20 @@ python ./main.py -a "train_dummy_1.yml"
 # python ./main.py -p 'exp_19_c.yml'
 # python ./main.py -p 'exp_19_d.yml'
 # python ./main.py -p 'exp_19_e.yml'
-# python ./main.py 'test_19.yml'
\ No newline at end of file
+# python ./main.py 'test_19.yml'
+
+# python ./main.py -p 'exp_20_a.yml'
+# python ./main.py -p 'exp_20_b.yml'
+# python ./main.py -p 'exp_20_c.yml'
+# python ./main.py -p 'exp_20_d.yml'
+# python ./main.py -p 'exp_20_e.yml'
+# python ./main.py -p 'exp_20_f.yml'
+# python ./main.py -p 'exp_20_g.yml'
+# python ./main.py -p 'exp_20_h.yml'
+# python ./main.py -p 'exp_20_i.yml'
+
+# python ./main.py -p 'exp_21.yml'
+# python ./main.py 'test_21.yml'
+
+# python ./main.py -p 'exp_22_a.yml'
+python ./main.py -p 'exp_22_b.yml'
\ No newline at end of file
diff --git a/transformers/best_policy.json b/transformers/best_policy.json
index 8552ead..5c7db13 100644
--- a/transformers/best_policy.json
+++ b/transformers/best_policy.json
@@ -2,10 +2,11 @@
   [
     [
       [
-        "GridDistortion",
+        "ShiftScaleRotate",
         {
-          "num_steps": 5,
-          "distort_limit": 0.14799401075641008,
+          "shift_limit": 0.11387726084839885,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
           "p": 0.25
         }
       ],
@@ -13,78 +14,77 @@
         "ElasticTransform",
         {
           "alpha": 1,
-          "sigma": 48,
-          "alpha_affine": 32,
+          "sigma": 54,
+          "alpha_affine": 60,
           "p": 0.75
         }
       ]
     ],
     [
       [
-        "Rotate",
+        "ElasticTransform",
         {
-          "limit": 24,
-          "p": 0.75
+          "alpha": 1,
+          "sigma": 38,
+          "alpha_affine": 49,
+          "p": 0.25
         }
       ],
       [
-        "RandomGamma",
+        "InvertImg",
         {
-          "gamma_limit": [
-            83,
-            111
-          ],
           "p": 0.0
         }
       ]
     ],
     [
       [
-        "GridDistortion",
+        "Blur",
         {
-          "num_steps": 3,
-          "distort_limit": 0.39339244809955043,
-          "p": 0.5
+          "blur_limit": 4,
+          "p": 0.75
         }
       ],
       [
-        "InvertImg",
+        "RandomBrightness",
         {
+          "limit": 0.21709943596362713,
           "p": 0.75
         }
       ]
     ],
     [
       [
-        "RandomGamma",
+        "RandomBrightness",
         {
-          "gamma_limit": [
-            78,
-            114
-          ],
-          "p": 0.0
+          "limit": 0.1582796388933827,
+          "p": 0.25
         }
       ],
       [
-        "RandomContrast",
+        "InvertImg",
         {
-          "limit": 0.2927473662936637,
-          "p": 0.0
+          "p": 0.75
         }
       ]
     ],
     [
       [
-        "Blur",
+        "ElasticTransform",
         {
-          "blur_limit": 5,
+          "alpha": 1,
+          "sigma": 68,
+          "alpha_affine": 53,
           "p": 0.5
         }
       ],
       [
-        "RandomScale",
+        "RandomGamma",
         {
-          "scale_limit": 0.06571753742364086,
+          "gamma_limit": [
+            75,
+            110
+          ],
           "p": 0.75
         }
       ]
@@ -93,88 +93,84 @@
   [
     [
       [
-        "ElasticTransform",
+        "MotionBlur",
         {
-          "alpha": 1,
-          "sigma": 56,
-          "alpha_affine": 46,
-          "p": 0.0
+          "blur_limit": 4,
+          "p": 0.25
         }
       ],
       [
-        "RandomContrast",
+        "ShiftScaleRotate",
         {
-          "limit": 0.1460510064563706,
-          "p": 0.0
+          "shift_limit": 0.08009729859350545,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
+          "p": 0.75
         }
       ]
     ],
     [
       [
-        "InvertImg",
+        "RandomScale",
         {
-          "p": 0.75
+          "scale_limit": 0.058796809570100694,
+          "p": 0.0
         }
       ],
       [
-        "GridDistortion",
+        "Rotate",
         {
-          "num_steps": 5,
-          "distort_limit": 0.4695015924131173,
+          "limit": 5,
           "p": 0.5
         }
       ]
     ],
     [
       [
-        "GridDistortion",
+        "RandomContrast",
         {
-          "num_steps": 4,
-          "distort_limit": 0.21895960927807032,
-          "p": 0.25
+          "limit": 0.21315832546805663,
+          "p": 0.5
         }
       ],
       [
-        "RandomGamma",
+        "Blur",
         {
-          "gamma_limit": [
-            83,
-            128
-          ],
-          "p": 0.75
+          "blur_limit": 3,
+          "p": 0.25
         }
       ]
     ],
     [
       [
-        "ElasticTransform",
+        "ShiftScaleRotate",
         {
-          "alpha": 1,
-          "sigma": 36,
-          "alpha_affine": 64,
-          "p": 0.75
+          "shift_limit": 0.08921031206686397,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
+          "p": 0.25
         }
       ],
       [
-        "MotionBlur",
+        "GridDistortion",
         {
-          "blur_limit": 4,
-          "p": 0.75
+          "num_steps": 5,
+          "distort_limit": 0.4178353995610291,
+          "p": 0.5
         }
       ]
     ],
     [
       [
-        "InvertImg",
+        "Blur",
         {
-          "p": 0.25
+          "blur_limit": 3,
+          "p": 0.5
         }
       ],
       [
-        "GridDistortion",
+        "InvertImg",
         {
-          "num_steps": 3,
-          "distort_limit": 0.23367235529535352,
           "p": 0.25
         }
       ]
@@ -183,90 +179,93 @@
   [
     [
       [
-        "MotionBlur",
+        "RandomScale",
         {
-          "blur_limit": 3,
-          "p": 0.5
+          "scale_limit": 0.17806803628713547,
+          "p": 0.25
         }
       ],
       [
-        "ShiftScaleRotate",
+        "Blur",
         {
-          "shift_limit": 0.06148464144527799,
-          "scale_limit": 0.0,
-          "rotate_limit": 0,
+          "blur_limit": 3,
           "p": 0.25
         }
       ]
     ],
     [
       [
-        "MotionBlur",
+        "RandomGamma",
         {
-          "blur_limit": 5,
-          "p": 0.25
+          "gamma_limit": [
+            81,
+            127
+          ],
+          "p": 0.75
         }
       ],
       [
-        "GridDistortion",
+        "ShiftScaleRotate",
         {
-          "num_steps": 4,
-          "distort_limit": 0.27091780647728625,
-          "p": 0.0
+          "shift_limit": 0.04155724194635952,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
+          "p": 0.25
         }
       ]
     ],
     [
       [
-        "RandomGamma",
+        "GridDistortion",
         {
-          "gamma_limit": [
-            79,
-            118
-          ],
-          "p": 0.0
+          "num_steps": 5,
+          "distort_limit": 0.23635869331192955,
+          "p": 0.25
         }
       ],
       [
-        "Blur",
+        "ShiftScaleRotate",
         {
-          "blur_limit": 4,
+          "shift_limit": 0.0438077081715082,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
           "p": 0.0
         }
       ]
     ],
     [
       [
-        "RandomBrightness",
+        "RandomGamma",
         {
-          "limit": 0.21154968767871296,
+          "gamma_limit": [
+            71,
+            120
+          ],
           "p": 0.0
         }
       ],
       [
-        "GridDistortion",
+        "Rotate",
         {
-          "num_steps": 3,
-          "distort_limit": 0.2601783109847845,
-          "p": 0.5
+          "limit": 24,
+          "p": 0.0
         }
       ]
     ],
     [
       [
-        "RandomBrightness",
+        "GridDistortion",
         {
-          "limit": 0.1214401471013084,
-          "p": 0.5
+          "num_steps": 4,
+          "distort_limit": 0.3435717169845224,
+          "p": 0.25
         }
       ],
       [
-        "ElasticTransform",
+        "Blur",
         {
-          "alpha": 1,
-          "sigma": 30,
-          "alpha_affine": 46,
-          "p": 0.25
+          "blur_limit": 5,
+          "p": 0.0
         }
       ]
     ]
@@ -274,10 +273,9 @@
   [
     [
       [
-        "GridDistortion",
+        "RandomScale",
         {
-          "num_steps": 4,
-          "distort_limit": 0.19686816805368107,
+          "scale_limit": 0.19210922006566594,
           "p": 0.5
         }
       ],
@@ -285,7 +283,7 @@
         "Blur",
         {
           "blur_limit": 5,
-          "p": 0.5
+          "p": 0.75
         }
       ]
     ],
@@ -293,68 +291,69 @@
       [
         "RandomBrightness",
         {
-          "limit": 0.24474872175759524,
-          "p": 0.5
+          "limit": 0.10552284901390566,
+          "p": 0.75
         }
       ],
       [
-        "RandomGamma",
+        "InvertImg",
         {
-          "gamma_limit": [
-            79,
-            123
-          ],
-          "p": 0.25
+          "p": 0.75
         }
       ]
     ],
     [
       [
-        "RandomScale",
+        "RandomBrightness",
         {
-          "scale_limit": 0.06723559066411951,
+          "limit": 0.24324438454018685,
           "p": 0.25
         }
       ],
       [
-        "InvertImg",
+        "RandomGamma",
         {
-          "p": 0.5
+          "gamma_limit": [
+            71,
+            123
+          ],
+          "p": 0.0
         }
       ]
     ],
     [
       [
-        "RandomGamma",
+        "ShiftScaleRotate",
         {
-          "gamma_limit": [
-            81,
-            115
-          ],
+          "shift_limit": 0.05061031789731513,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
           "p": 0.5
         }
       ],
       [
-        "RandomBrightness",
+        "Blur",
         {
-          "limit": 0.1987665278287377,
-          "p": 0.5
+          "blur_limit": 3,
+          "p": 0.0
         }
       ]
     ],
     [
       [
-        "RandomScale",
+        "Rotate",
         {
-          "scale_limit": 0.11405009946142097,
-          "p": 0.5
+          "limit": 5,
+          "p": 0.25
         }
       ],
       [
-        "Rotate",
+        "ElasticTransform",
         {
-          "limit": 31,
-          "p": 0.75
+          "alpha": 1,
+          "sigma": 52,
+          "alpha_affine": 68,
+          "p": 0.0
         }
       ]
     ]
@@ -362,37 +361,36 @@
   [
     [
       [
-        "Blur",
+        "InvertImg",
         {
-          "blur_limit": 5,
-          "p": 0.5
+          "p": 0.25
         }
       ],
       [
         "RandomGamma",
         {
           "gamma_limit": [
-            83,
-            112
+            72,
+            127
           ],
-          "p": 0.0
+          "p": 0.5
         }
       ]
     ],
     [
       [
-        "InvertImg",
+        "Rotate",
         {
-          "p": 0.75
+          "limit": 20,
+          "p": 0.5
         }
       ],
       [
-        "ElasticTransform",
+        "GridDistortion",
         {
-          "alpha": 1,
-          "sigma": 50,
-          "alpha_affine": 34,
-          "p": 0.0
+          "num_steps": 5,
+          "distort_limit": 0.19232974824642735,
+          "p": 0.25
         }
       ]
     ],
@@ -400,52 +398,52 @@
       [
         "Rotate",
         {
-          "limit": 12,
-          "p": 0.25
+          "limit": 40,
+          "p": 0.0
         }
       ],
       [
-        "RandomBrightness",
+        "ShiftScaleRotate",
         {
-          "limit": 0.2894764801802207,
+          "shift_limit": 0.05375938306163693,
+          "scale_limit": 0.0,
+          "rotate_limit": 0,
           "p": 0.75
         }
       ]
     ],
     [
       [
-        "InvertImg",
+        "RandomContrast",
         {
+          "limit": 0.22051179195250456,
           "p": 0.25
         }
       ],
       [
-        "ShiftScaleRotate",
+        "GridDistortion",
         {
-          "shift_limit": 0.0424496535958061,
-          "scale_limit": 0.0,
-          "rotate_limit": 0,
-          "p": 0.0
+          "num_steps": 4,
+          "distort_limit": 0.24651362087789588,
+          "p": 0.5
         }
       ]
     ],
     [
       [
-        "ElasticTransform",
+        "MotionBlur",
         {
-          "alpha": 1,
-          "sigma": 44,
-          "alpha_affine": 63,
-          "p": 0.0
+          "blur_limit": 3,
+          "p": 0.25
         }
       ],
       [
-        "MotionBlur",
+        "Rotate",
         {
-          "blur_limit": 4,
-          "p": 0.5
+          "limit": 41,
+          "p": 0.0
         }
       ]
     ]
   ]
-]
+]
\ No newline at end of file
diff --git a/transformers/utils.py b/transformers/utils.py
index 6ebd804..2cb876b 100644
--- a/transformers/utils.py
+++ b/transformers/utils.py
@@ -127,7 +127,8 @@ class PolicyTransformer:
             if path.exists('transformers/best_policy.json'):
                 with open('transformers/best_policy.json') as f:
                     policy_array = json.load(f)
-                    sub_policy_pool = chain.from_iterable(policy_array)
+                    # sub_policy_pool = chain.from_iterable(policy_array)
+                    sub_policy_pool = policy_array[-1]
 
                     for sub_policy in sub_policy_pool:
                         op_1, params_1 = sub_policy[0]
diff --git a/utils/__pycache__/experiment_utils.cpython-37.pyc b/utils/__pycache__/experiment_utils.cpython-37.pyc
index 0afb739..abe563a 100644
Binary files a/utils/__pycache__/experiment_utils.cpython-37.pyc and b/utils/__pycache__/experiment_utils.cpython-37.pyc differ
diff --git a/utils/experiment_utils.py b/utils/experiment_utils.py
index 1addb5d..c901747 100644
--- a/utils/experiment_utils.py
+++ b/utils/experiment_utils.py
@@ -151,7 +151,7 @@ class ExperimentHelper:
                 self.progress_loss = False
 
             # storing roc for check
-            if self.best_val_roc < val_roc:
+            if self.best_val_roc <= val_roc:
                 self.best_val_roc = val_roc
                 self.progress_roc = True
             else:
@@ -177,4 +177,4 @@ class ExperimentHelper:
 
     def publish_intermediate(self, results):
         # wandb
-        publish_intermediate(results)
+        publish_intermediate(results, self.best_val_loss, self.best_val_roc)
diff --git a/utils/wandb_update.py b/utils/wandb_update.py
index b21facb..0bd020d 100644
--- a/utils/wandb_update.py
+++ b/utils/wandb_update.py
@@ -1,9 +1,10 @@
 import wandb
 from utils.print_util import cprint
 
+
 def wandb_init(config):
     wandb.init(project="plantpatho-2020")
-    
+
     wandb.config.experiment_name = config['experiment_name']
     wandb.config.seed = config['seed']
     wandb.config.model = config['model']['name']
@@ -19,5 +20,12 @@ def wandb_init(config):
     return True
 
 
-def publish_intermediate(results):
+def publish_intermediate(results, best_val_loss, best_kaggle_metric):
+    wandb.config.update(
+        {
+            "best_val_loss": best_val_loss,
+            "best_kaggle_metric": best_kaggle_metric
+        }, 
+        allow_val_change=True
+    )
     return wandb.log(results)
diff --git a/wandb/debug.log b/wandb/debug.log
index f9f3c11..0d9bd20 100644
Binary files a/wandb/debug.log and b/wandb/debug.log differ
